// Generated by CoffeeScript 1.7.1
angular.module('research').factory('ResearchFactory', [
  'UUIDFactory', 'DeltaService', '$q', function(UUIDFactory, DeltaService, $q) {
    var _addSection, _addSubSection, _connect, _deleteSection, _deleteSubSection, _storage;
    _storage = {
      document: {
        sections: []
      }
    };
    _connect = function(docid) {
      var deferred;
      deferred = $q.defer();
      console.log('[ResearchFactory]: Connecting...');
      DeltaService.connect('research', docid).then(function(document) {
        console.log('[ResearchFactory]: Connected ' + docid);
        _storage.document = document;
        console.log(document);
        return deferred.resolve();
      }, function(error) {
        console.log('[ResearchFactory]: Connection Failed!');
        return deferred.reject(error);
      });
      return deferred.promise;
    };
    _addSection = function(index) {
      var newSection;
      console.log('[ResearchFactory]: Add Section');
      newSection = null;
      if (index > _storage.document.sections.length) {
        return console.log('[ResearchFactory]: Error! Invalid Index!');
      } else {
        newSection = {
          id: UUIDFactory.generateShortUUID(),
          title: '',
          contents: '',
          subsections: []
        };
        _storage.document.sections.splice(index, 0, newSection);
        return DeltaService.addDelta({
          name: 'section.add',
          args: {
            section_id: newSection.id,
            index: index
          }
        });
      }
    };
    _deleteSection = function(id) {
      var i, _i, _ref, _results;
      console.log('[ResearchFactory]: Delete Section');
      _results = [];
      for (i = _i = 0, _ref = _storage.document.sections.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (_storage.document.sections[i].id === id) {
          _storage.document.sections.splice(i, 1);
          DeltaService.addDelta({
            name: 'section.delete',
            args: {
              section_id: id
            }
          });
          break;
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    _addSubSection = function(section_id, index) {
      var i, newSubSection, _i, _ref, _results;
      console.log('[ResearchFactory]: Add SubSection');
      _results = [];
      for (i = _i = 0, _ref = _storage.document.sections.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (_storage.document.sections[i].id === section_id) {
          newSubSection = null;
          if (index > _storage.document.sections[i].subsections.length) {
            _results.push(console.log('[ResearchFactory]: Error! Invalid Index!'));
          } else {
            newSubSection = {
              id: UUIDFactory.generateShortUUID(),
              title: '',
              contents: '',
              subsubsections: []
            };
            _storage.document.sections[i].subsections.splice(index, 0, newSubSection);
            DeltaService.addDelta({
              name: 'subsection.add',
              args: {
                section_id: section_id,
                subsection_id: newSubSection.id,
                index: index
              }
            });
            break;
          }
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    _deleteSubSection = function(section_id, subsection_id) {
      var i, j, _i, _ref, _results;
      console.log('[ResearchFactory]: Delete SubSection');
      _results = [];
      for (i = _i = 0, _ref = _storage.document.sections.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (_storage.document.sections[i].id === section_id) {
          _results.push((function() {
            var _j, _ref1, _results1;
            _results1 = [];
            for (j = _j = 0, _ref1 = _storage.document.sections[i].subsections.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
              if (_storage.document.sections[i].subsections[j].id === subsection_id) {
                _storage.document.sections[i].subsections.splice(j, 1);
                DeltaService.addDelta({
                  name: 'subsection.delete',
                  args: {
                    section_id: section_id,
                    subsection_id: subsection_id
                  }
                });
                break;
              } else {
                _results1.push(void 0);
              }
            }
            return _results1;
          })());
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    return {
      storage: _storage,
      connect: _connect,
      addSection: _addSection,
      deleteSection: _deleteSection,
      addSubSection: _addSubSection,
      deleteSubSection: _deleteSubSection
    };
  }
]);

//# sourceMappingURL=research.factory.map
